#cloud-config

package_upgrade: true

apt:
  sources:
    docker.list:
      source: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
      keyid: 0EBFCD88

packages:
  # aws route 53 prereqs
  - zip
  # docker prereqs
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  # docker, obvs
  - docker-ce
  # CIS Docker [WARN] 1.5 - Ensure auditing is configured for the Docker daemon
  - auditd

groups:
  - docker: [root, bob]
  
users:
  - default
  - name: bob
    gecos: Bob Rohan
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: [docker]
    ssh_authorized_keys:
      - ${pubkey}

runcmd:
  # data disk setup 1 - sfdisk
  - echo 'type=83' | sfdisk /dev/xvdf
  # data disk setup 2 - pvcreate
  - pvcreate /dev/xvdf1
  # data disk setup 3 - vgcreate
  - vgcreate dreamteam_vg /dev/xvdf1
  # data disk setup 4 - lvcreate
  - lvcreate -L 3G -n dreamteam_docker_lv dreamteam_vg
  - lvcreate -L 500M -n dreamteam_audit_lv dreamteam_vg
  # data disk setup 5 - mkfs - 
  - mkfs -t ext4 /dev/mapper/dreamteam_vg-dreamteam_docker_lv
  - mkfs -t ext4 /dev/mapper/dreamteam_vg-dreamteam_audit_lv
  # CIS Docker [WARN] 1.1  - Ensure a separate partition for containers has been created
  # data disk setup 6 - mount docker
  - systemctl stop docker 
  - mv /var/lib/docker /var/lib/__docker
  - mkdir /var/lib/docker
  - mount /dev/mapper/dreamteam_vg-dreamteam_docker_lv /var/lib/docker
  - rsync -aH /var/lib/__docker/ /var/lib/docker
  - rm -rf /var/lib/__docker
  - systemctl start docker
  # CIS Docker [WARN] 1.5 - Ensure auditing is configured for the Docker daemon
  # Impact: Auditing generates quite big log files. create a separate partition of audit to avoid filling root file system.
  # data disk setup 7 - mount audit
  - service auditd stop
  - mv /var/log/audit /var/log/__audit
  - mkdir /var/log/audit
  - mount /dev/mapper/dreamteam_vg-dreamteam_audit_lv /var/log/audit
  - rync -aH /var/log/__audit/ /var/log/audit
  - rm -rf /var/log/__audit
  - service auditd start
  # CIS Docker [WARN] 1.5 - Ensure auditing is configured for the Docker daemon
  - echo "-w /usr/bin/docker -k docker" >> /etc/audit/rules.d/docker.rules
  # CIS Docker [WARN] 1.6 - Ensure auditing is configured for Docker files and directories - /var/lib/docker
  - echo "-w /var/lib/docker -k docker" >> /etc/audit/rules.d/docker.rules
  # CIS Docker [WARN] 1.7 - Ensure auditing is configured for Docker files and directories - /etc/docker
  - echo "-w /etc/docker -k docker" >> /etc/audit/rules.d/docker.rules
  # CIS Docker [WARN] 1.10  - Ensure auditing is configured for Docker files and directories - /etc/default/docker
  - echo "-w /etc/default/docker -k docker" >> /etc/audit/rules.d/docker.rules
  # CIS Docker [WARN] 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
  - echo "-w /etc/docker/daemon.json -k docker" >> /etc/audit/rules.d/docker.rules
  - service auditd restart
  # workaround aws route 53
  - wget https://github.com/amitsaha/aws-vpc-dns-address/releases/download/v0.1/aws-vpc-dns-address-0.1-linux-amd64.zip
  - unzip aws-vpc-dns-address-0.1-linux-amd64.zip
  - mv aws-vpc-dns-address-0.1-linux-amd64 /usr/local/bin
  - chmod +x /usr/local/bin/aws-vpc-dns-address-0.1-linux-amd64
  - sed -i 's/\["8.8.8.8"\]/\["'"$(aws-vpc-dns-address-0.1-linux-amd64)"'", "8.8.8.8"\]/' /etc/docker/daemon.json
  - systemctl restart docker
  # init swarm
  - docker swarm init
  # add secrets
  - echo "${dburi}" | docker secret create db_uri -
  # clone repo
  - git clone https://gitlab.com/bobrohan/dream-team.git
  # install crontab
  - crontab -l | { cat; echo "*/2 * * * * docker stack deploy --compose-file /dream-team/docker-compose.yml dreamteam >> deploy.log 2>&1"; } | crontab -
  # CIS Docker [INFO] 6.1 - Avoid image sprawl
  - crontab -l | { cat; echo "0 0 * * * docker container prune -f --filter 'until=24h'"; } | crontab -
  - crontab -l | { cat; echo "10 0 * * * docker image prune -f -a --filter 'until=24h'"; } | crontab -

# dns = workaround aws route 53
# no-new-privilages = # CIS Docker [WARN] 2.18 - Ensure containers are restricted from acquiring new privileges
write_files:
  - path: /etc/docker/daemon.json
    content: |
      {
        "dns": ["8.8.8.8"],
        "no-new-privileges": true 
      }
      
mounts:
  - ["/dev/mapper/dreamteam_vg-dreamteam_docker_lv", "/var/lib/docker","ext4", "defaults,nofail", "0", "2" ]
  - ["/dev/mapper/dreamteam_vg-dreamteam_audit_lv", "/var/log/audit","ext4", "defaults,nofail", "0", "2" ]
  